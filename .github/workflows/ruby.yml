name: Ruby

on:
  push:
    branches-ignore:
      - master
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.1-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1
          bundler-cache: true
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.9.0'
          check-latest: false
      - name: Install Yarn
        run: yarn --frozen-lockfile
      - name: Create Evaluation File
        run: |
          rm -rf spec
          git clone https://github.com/diveintocode-corp/cdp_web_manyo_evaluation_code.git spec
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Create Feedback at Step1
        if: contains(github.ref, 'step1')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec -r ./spec/my_formatter.rb -f MyFormatter spec/system/step1_spec.rb -o .github/feedback_template.md
        continue-on-error: true
      - name: Create Feedback at Step2
        if: contains(github.ref, 'step2')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec -r ./spec/my_formatter.rb -f MyFormatter spec/system/step2_spec.rb -o .github/feedback_template.md
        continue-on-error: true
      - name: Create Feedback at Step3
        if: contains(github.ref, 'step3')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec -r ./spec/my_formatter.rb -f MyFormatter spec/system/step3_spec.rb -o .github/feedback_template.md
        continue-on-error: true
      - name: Create Feedback at Step4
        if: contains(github.ref, 'step4')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec -r ./spec/my_formatter.rb -f MyFormatter spec/system/step4_spec.rb -o .github/feedback_template.md
        continue-on-error: true
      - name: Create Feedback at Step5
        if: contains(github.ref, 'step5')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rspec -r ./spec/my_formatter.rb -f MyFormatter spec/system/step5_spec.rb -o .github/feedback_template.md
        continue-on-error: true
      - name: Rspec Results at Step1
        if: contains(github.ref, 'step1')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rspec spec/system/step1_spec.rb
        continue-on-error: true
      - name: Rspec Results at Step2
        if: contains(github.ref, 'step2')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rspec spec/system/step2_spec.rb
        continue-on-error: true
      - name: Rspec Results at Step3
        if: contains(github.ref, 'step3')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rspec spec/system/step3_spec.rb
        continue-on-error: true
      - name: Rspec Results at Step4
        if: contains(github.ref, 'step4')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rspec spec/system/step4_spec.rb
        continue-on-error: true
      - name: Rspec Results at Step5
        if: contains(github.ref, 'step5')
        env:
          RAILS_ENV: "test"
          DATABASE_URL: "postgres://postgres@localhost:5432/manyo_test"
        run: |
          bundle exec rspec spec/system/step5_spec.rb
        continue-on-error: true
      - uses: dblock/create-a-github-issue@v3
        if: contains(github.ref, 'step1') || contains(github.ref, 'step2') || contains(github.ref, 'step3') || contains(github.ref, 'step4') || contains(github.ref, 'step5')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/feedback_template.md
      - name: Create Error File on Branch Name
        if: "!contains(github.ref, 'step1') && !contains(github.ref, 'step2') && !contains(github.ref, 'step3') && !contains(github.ref, 'step4') && !contains(github.ref, 'step5')"
        run: |
          echo -e "---\ntitle: ディープロ：課題評価に関するご連絡\n---\n## 課題の評価が実行できませんでした。\nブランチ名に誤りがないか確認してください。\n課題の評価が可能なブランチ名：step1、step2、step3、step4、step5" > .github/branch_error_template.md
      - uses: dblock/create-a-github-issue@v3
        if: "!contains(github.ref, 'step1') && !contains(github.ref, 'step2') && !contains(github.ref, 'step3') && !contains(github.ref, 'step4') && !contains(github.ref, 'step5')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/branch_error_template.md
      - name: Create Error File on Non-branch Name
        if: failure()
        run: |
          echo -e "---\ntitle: ディープロ：課題評価に関するご連絡\n---\n## 課題の評価が実行できませんでした。\n### 以下の項目を確認してください。\n- クローン元のソースコードにあらかじめ用意されているGemfileのGemを削除したり、バージョンを変更したりしていませんか？\n- カリキュラムで推奨されているものと異なるバージョンのRubyを使用していませんか？\n- カリキュラムで推奨されているものと異なるバージョンのNode.jsを使用していませんか？\n\n**上記を確認して解決しない場合、お手数ですが、ディープロの質問投稿よりこちらのリポジトリのURLを投稿いただき、課題の評価が行われない旨をお知らせください。**" > .github/execution_error_template.md
      - uses: dblock/create-a-github-issue@v3
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/execution_error_template.md
